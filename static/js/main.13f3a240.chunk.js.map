{"version":3,"sources":["firestore.jsx","context.jsx","components/Contact.jsx","components/Contacts.jsx","components/Header.jsx","components/AddContact.jsx","components/EditContact.jsx","components/About.jsx","components/NotFound.jsx","App.jsx","serviceWorker.jsx","index.jsx"],"names":["firebase","require","apps","length","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","Context","React","createContext","Consumer","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","collection","onSnapshot","snapshot","docChanges","forEach","change","doc","data","value","this","props","children","Component","Contact","showContactInfo","contactListener","e","classList","target","contains","deleteContact","a","delete","name","email","phone","message","bind","className","onClick","style","cursor","float","color","marginRight","to","Contacts","key","Header","title","href","defaultProps","AddContact","errors","formOnChange","formOnSubmit","preventDefault","newContact","add","history","push","onChange","onSubmit","placeholder","required","EditContact","match","params","editContact","set","get","defaultValue","undefined","NotFound","App","exact","path","component","About","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"iUAAMA,EAAWC,EAAQ,IACzBA,EAAQ,IAEHD,EAASE,KAAKC,QACjBH,EAASI,cAAc,CACrBC,OAAQ,0CACRC,WAAY,gCACZC,YAAa,uCACbC,UAAW,gBACXC,cAAe,4BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAInB,IAEeC,EAFJb,EAASc,YCbdC,EAAUC,IAAMC,gBAChBC,EAAWH,EAAQG,SAEnBC,EAAU,SAACC,EAAOC,GACtB,OAAQA,EAAOC,MACb,IAAK,iBACH,OAAO,2BACFF,GADL,IAEEG,SAAUH,EAAMG,SAASC,QACvB,SAAAC,GAAO,OAAIA,EAAQC,KAAOL,EAAOM,aAIvC,IAAK,cACH,OAAO,2BACFP,GADL,IAEEG,SAAS,CAAEF,EAAOM,SAAV,mBAAsBP,EAAMG,aAGxC,IAAK,eACH,OAAO,2BACFH,GADL,IAEEG,SAAUH,EAAMG,SAASK,KAAI,SAAAH,GAAO,OAClCA,EAAQC,KAAOL,EAAOM,QAAQD,GACzBD,EAAUJ,EAAOM,QAClBF,OAIV,QACE,OAAOL,IAIAS,EAAb,4MACET,MAAQ,CACNG,SAAU,GACVO,SAAU,SAAAT,GAAM,OAAI,EAAKU,UAAS,SAAAX,GAAK,OAAID,EAAQC,EAAOC,QAH9D,kEAMuB,IAAD,OAKlBR,EAAGmB,WAAW,YAAYC,YAAW,SAAAC,GAAQ,OAC3CA,EAASC,aAAaC,SAAQ,SAAAC,GAC5B,OAAQA,EAAOf,MACb,IAAK,QACH,EAAKF,MAAMU,SAAS,CAClBR,KAAM,cACNK,QAAQ,aAAGD,GAAIW,EAAOC,IAAIZ,IAAOW,EAAOC,IAAIC,UAE9C,MAEF,IAAK,WACH,EAAKnB,MAAMU,SAAS,CAClBR,KAAM,eACNK,QAAQ,aAAGD,GAAIW,EAAOC,IAAIZ,IAAOW,EAAOC,IAAIC,UAE9C,MAEF,IAAK,UACH,EAAKnB,MAAMU,SAAS,CAClBR,KAAM,iBACNK,QAASU,EAAOC,IAAIZ,cA/BlC,+BAyCI,OACE,kBAACX,EAAQc,SAAT,CAAkBW,MAAOC,KAAKrB,OAC3BqB,KAAKC,MAAMC,cA3CpB,GAA8BC,aCwDfC,E,4MAvFbzB,MAAQ,CACN0B,iBAAiB,G,EAGnBC,gBAAkB,SAAAC,GAChB,IAAMC,EAAYD,EAAEE,OAAOD,UAEvBA,EAAUE,SAAS,gBACrB,EAAKpB,SAAS,CAAEe,iBAAkB,EAAK1B,MAAM0B,kBAGtCG,EAAUE,SAAS,aAC1B,EAAKC,iB,EAMTA,c,uCAAgB,WAAO1B,EAAII,GAAX,SAAAuB,EAAA,sEACRxC,EACHmB,WAAW,YACXM,IAAIZ,GACJ4B,SAJW,2C,+GAON,IAAD,SACqCb,KAAKC,MAAMjB,QAA/CC,EADD,EACCA,GAAI6B,EADL,EACKA,KAAMC,EADX,EACWA,MAAOC,EADlB,EACkBA,MAAOC,EADzB,EACyBA,QACxBZ,EAAoBL,KAAKrB,MAAzB0B,gBAER,OACE,kBAAC5B,EAAD,MACG,SAAAsB,GAMC,OALA,EAAKY,cAAgB,EAAKA,cAAcO,KACtC,EACAjC,EACAc,EAAMV,UAGN,yBAAK8B,UAAU,sBAAsBC,QAAS,EAAKd,iBACjD,4BACGQ,EAAM,IACP,uBACEK,UAAU,mBACVE,MAAO,CAAEC,OAAQ,aAEnB,uBACEH,UAAU,eACVE,MAAO,CACLE,MAAO,QACPD,OAAQ,UACRE,MAAO,QACPC,YAAa,UAGjB,kBAAC,IAAD,CAAMC,GAAE,gBAAWzC,IACjB,uBACEkC,UAAU,oBACVE,MAAO,CACLE,MAAO,QACPD,OAAQ,UACRE,MAAO,QACPC,YAAa,YAKpBpB,EACC,wBAAIc,UAAU,cACZ,wBAAIA,UAAU,mBAAd,UAAwCJ,GACxC,wBAAII,UAAU,mBAAd,UAAwCH,GACxC,wBAAIG,UAAU,mBACZ,sCADF,KACmBF,IAGnB,a,GA3EId,aCePwB,EAhBf,uKAEI,OACE,kBAAClD,EAAD,MACG,SAAAsB,GAAK,OACJ,kBAAC,WAAD,KACGA,EAAMjB,SAASK,KAAI,SAAAH,GAAO,OACzB,kBAAC,EAAD,CAAS4C,IAAK5C,EAAQC,GAAID,QAASA,eAPjD,GAA8BmB,aCAxB0B,EAAS,SAAA5B,GAAU,IACf6B,EAAU7B,EAAV6B,MACR,OACE,yBAAKX,UAAU,4DACb,yBAAKA,UAAU,aACb,uBAAGY,KAAK,IAAIZ,UAAU,gBACnBW,GAEH,6BACE,wBAAIX,UAAU,sBACZ,wBAAIA,UAAU,YACZ,kBAAC,IAAD,CAAMO,GAAG,IAAIP,UAAU,YAAvB,SAIF,4BACE,kBAAC,IAAD,CAAMO,GAAG,OAAOP,UAAU,YAA1B,QAKF,4BACE,kBAAC,IAAD,CAAMO,GAAG,SAASP,UAAU,YAA5B,eAWdU,EAAOG,aAAe,CACpBF,MAAO,UAOMD,Q,QCuDAI,EAjGf,4MACEtD,MAAQ,CACNmC,KAAM,GACNC,MAAO,GACPC,MAAO,GACPC,QAAS,GACTiB,OAAQ,IANZ,EASEC,aAAe,SAAA5B,GAAC,OAAI,EAAKjB,SAAL,eAAiBiB,EAAEE,OAAOK,KAAOP,EAAEE,OAAOV,SAThE,EAUEqC,aAVF,uCAUiB,WAAO/C,EAAUkB,GAAjB,yBAAAK,EAAA,6DACbL,EAAE8B,iBADW,EAG2B,EAAK1D,MAArCmC,EAHK,EAGLA,KAAMC,EAHD,EAGCA,MAAOC,EAHR,EAGQA,MAAOC,EAHf,EAGeA,QAEtBqB,EAAa,CAAExB,OAAMC,QAAOC,QAAOC,WAL5B,SAOP7C,EAAGmB,WAAW,YAAYgD,IAAID,GAAYrD,GAPnC,OASb,EAAKK,SAAS,CACZwB,KAAM,GACNC,MAAO,GACPC,MAAO,GACPC,QAAS,GACTiB,OAAQ,KAGV,EAAKjC,MAAMuC,QAAQC,KAAK,KAjBX,2CAVjB,+GA8BY,IAAD,OACP,OACE,kBAAChE,EAAD,MACG,SAAAsB,GAAK,OACJ,yBAAKoB,UAAU,aACb,yBAAKA,UAAU,eAAf,eACA,yBAAKA,UAAU,aACb,0BACEvC,OAAO,IACP8D,SAAU,EAAKP,aACfQ,SAAU,EAAKP,aAAalB,KAAK,EAAMnB,EAAMV,WAE7C,yBAAK8B,UAAU,cACb,uCACA,2BACEtC,KAAK,OACLsC,UAAU,+BACVL,KAAK,OACL8B,YAAY,qBACZC,UAAQ,KAIZ,yBAAK1B,UAAU,cACb,wCACA,2BACEtC,KAAK,QACLsC,UAAU,+BACVL,KAAK,QACL8B,YAAY,sBACZC,UAAQ,KAGZ,yBAAK1B,UAAU,cACb,wCACA,2BACEtC,KAAK,OACLsC,UAAU,+BACVL,KAAK,QACL8B,YAAY,sBACZC,UAAQ,KAGZ,yBAAK1B,UAAU,cACb,0CACA,2BACEtC,KAAK,OACLsC,UAAU,+BACVL,KAAK,UACL8B,YAAY,wBACZC,UAAQ,KAGZ,2BACEhE,KAAK,SACLkB,MAAM,cACNoB,UAAU,sCAtF5B,GAAgChB,aC+GjB2C,EA/Gf,4MACEnE,MAAQ,CACNuD,OAAQ,IAFZ,EAeEC,aAAe,SAAA5B,GAAC,OAAI,EAAKjB,SAAL,eAAiBiB,EAAEE,OAAOK,KAAOP,EAAEE,OAAOV,SAfhE,EAgBEqC,aAhBF,uCAgBiB,WAAO/C,EAAUkB,GAAjB,2BAAAK,EAAA,6DACbL,EAAE8B,iBAEMpD,EAAO,EAAKgB,MAAM8C,MAAMC,OAAxB/D,GAHK,EAI2B,EAAKN,MAArCmC,EAJK,EAILA,KAAMC,EAJD,EAICA,MAAOC,EAJR,EAIQA,MAAOC,EAJf,EAIeA,QACtBgC,EAAc,CAAEnC,OAAMC,QAAOC,QAAOC,WAL7B,SAOP7C,EACHmB,WAAW,YACXM,IAAIZ,GACJiE,IAAID,GAVM,OAYb,EAAK3D,SAAS,CACZwB,KAAM,GACNC,MAAO,GACPC,MAAO,GACPC,QAAS,GACTiB,OAAQ,KAGV,EAAKjC,MAAMuC,QAAQC,KAAK,KApBX,2CAhBjB,mPAMYxD,EAAOe,KAAKC,MAAM8C,MAAMC,OAAxB/D,GANZ,SAOsBb,EACfmB,WAAW,YACXM,IAAIZ,GACJkE,MAVP,OAOUtD,EAPV,OAYIG,KAAKV,SAASO,EAAIC,QAZtB,qIAuCY,IAAD,SACiCE,KAAKrB,MAArCmC,EADD,EACCA,KAAMC,EADP,EACOA,MAAOC,EADd,EACcA,MAAOC,EADrB,EACqBA,QAC5B,OACE,kBAACxC,EAAD,MACG,SAAAsB,GAAK,OACJ,yBAAKoB,UAAU,aACb,yBAAKA,UAAU,eAAf,gBACA,yBAAKA,UAAU,aACb,0BACEvC,OAAO,IACP8D,SAAU,EAAKP,aACfQ,SAAU,EAAKP,aAAalB,KAAK,EAAMnB,EAAMV,WAE7C,yBAAK8B,UAAU,cACb,uCACA,2BACEtC,KAAK,OACLsC,UAAS,+BACTL,KAAK,OACL8B,YAAY,qBACZQ,aAActC,EACd+B,UAAQ,KAIZ,yBAAK1B,UAAU,cACb,wCACA,2BACEtC,KAAK,QACLsC,UAAU,+BACVL,KAAK,QACL8B,YAAY,sBACZQ,aAAcrC,EACd8B,UAAQ,KAGZ,yBAAK1B,UAAU,cACb,wCACA,2BACEtC,KAAK,OACLsC,UAAU,+BACVL,KAAK,QACL8B,YAAY,sBACZQ,aAAcpC,EACd6B,UAAQ,KAGZ,yBAAK1B,UAAU,cACb,0CACA,2BACEtC,KAAK,OACLsC,UAAU,+BACVL,KAAK,UACL8B,YAAY,sBACZQ,aAAcnC,EACd4B,UAAQ,KAGZ,2BACEhE,KAAK,SACLkB,MAAM,iBACNoB,UAAU,sCApG5B,GAAiChB,aCDlB,WAAAF,GACb,OACE,6BACE,wBAAIkB,UAAU,aAAd,yBACA,uBAAGA,UAAU,QAAb,sCAC2BkC,IAA1BpD,EAAM8C,MAAMC,OAAO/D,IAClB,uBAAGkC,UAAU,gBAAb,cAAwClB,EAAM8C,MAAMC,OAAO/D,IAE7D,uBAAGkC,UAAU,kBAAb,iBCRS,SAASmC,IACtB,OACE,6BACE,wBAAInC,UAAU,aAAd,sBACA,uBAAGA,UAAU,QAAb,oC,kBC+BSoC,MAtBf,WACE,OACE,kBAAC,EAAD,KACE,kBAAC,IAAD,KACE,yBAAKpC,UAAU,OACb,kBAAC,EAAD,CAAQW,MAAM,oBACd,yBAAKX,UAAU,aACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOqC,OAAK,EAACC,KAAK,IAAIC,UAAW/B,IACjC,kBAAC,IAAD,CAAO6B,OAAK,EAACC,KAAK,SAASC,UAAWC,IACtC,kBAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,aAAaC,UAAWC,IAC1C,kBAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,OAAOC,UAAWzB,IACpC,kBAAC,IAAD,CAAOuB,OAAK,EAACC,KAAK,YAAYC,UAAWZ,IACzC,kBAAC,IAAD,CAAOY,UAAWJ,UChBZM,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAShB,MACvB,2DCZNiB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.13f3a240.chunk.js","sourcesContent":["const firebase = require(\"firebase\");\nrequire(\"firebase/firestore\");\n\nif (!firebase.apps.length) {\n  firebase.initializeApp({\n    apiKey: \"AIzaSyBtXP7szv3Yri7Z6SOApsjFF96isZJYEfI\",\n    authDomain: \"chatapp-aac3f.firebaseapp.com\",\n    databaseURL: \"https://chatapp-aac3f.firebaseio.com\",\n    projectId: \"chatapp-aac3f\",\n    storageBucket: \"chatapp-aac3f.appspot.com\",\n    messagingSenderId: \"801272197681\",\n    appId: \"1:801272197681:web:cb4c9f6813abe42df25b10\",\n    measurementId: \"G-M6YTT80Z80\"\n  });\n}\n\nconst db = firebase.firestore();\n\nexport default db;\n","import React, { Component } from \"react\";\nimport db from \"./firestore\";\n\nconst Context = React.createContext();\nconst Consumer = Context.Consumer;\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"DELETE_CONTACT\":\n      return {\n        ...state,\n        contacts: state.contacts.filter(\n          contact => contact.id !== action.payload\n        )\n      };\n\n    case \"ADD_CONTACT\":\n      return {\n        ...state,\n        contacts: [action.payload, ...state.contacts]\n      };\n\n    case \"EDIT_CONTACT\":\n      return {\n        ...state,\n        contacts: state.contacts.map(contact =>\n          contact.id === action.payload.id\n            ? (contact = action.payload)\n            : contact\n        )\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport class Provider extends Component {\n  state = {\n    contacts: [],\n    dispatch: action => this.setState(state => reducer(state, action))\n  };\n\n  componentDidMount() {\n    // const snapshot = await db.collection(\"contacts\").get();\n    // const data = snapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));\n    // this.setState({ contacts: data });\n\n    db.collection(\"contacts\").onSnapshot(snapshot =>\n      snapshot.docChanges().forEach(change => {\n        switch (change.type) {\n          case \"added\":\n            this.state.dispatch({\n              type: \"ADD_CONTACT\",\n              payload: { id: change.doc.id, ...change.doc.data() }\n            });\n            break;\n\n          case \"modified\":\n            this.state.dispatch({\n              type: \"EDIT_CONTACT\",\n              payload: { id: change.doc.id, ...change.doc.data() }\n            });\n            break;\n\n          case \"removed\":\n            this.state.dispatch({\n              type: \"DELETE_CONTACT\",\n              payload: change.doc.id\n            });\n            break;\n          default:\n        }\n      })\n    );\n  }\n\n  render() {\n    return (\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    );\n  }\n}\n\nexport { db, Consumer };\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { db, Consumer } from \"../context\";\n\nclass Contact extends Component {\n  state = {\n    showContactInfo: false\n  };\n\n  contactListener = e => {\n    const classList = e.target.classList;\n    // Drop down\n    if (classList.contains(\"fa-sort-down\")) {\n      this.setState({ showContactInfo: !this.state.showContactInfo });\n    }\n    // Delete\n    else if (classList.contains(\"fa-trash\")) {\n      this.deleteContact();\n    }\n\n    // Update\n  };\n\n  deleteContact = async (id, dispatch) => {\n    await db\n      .collection(\"contacts\")\n      .doc(id)\n      .delete();\n  };\n\n  render() {\n    const { id, name, email, phone, message } = this.props.contact;\n    const { showContactInfo } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          this.deleteContact = this.deleteContact.bind(\n            this,\n            id,\n            value.dispatch\n          );\n          return (\n            <div className=\"card card-body mb-3\" onClick={this.contactListener}>\n              <h4>\n                {name}{\" \"}\n                <i\n                  className=\"fas fa-sort-down\"\n                  style={{ cursor: \"pointer\" }}\n                ></i>\n                <i\n                  className=\"fas fa-trash\"\n                  style={{\n                    float: \"right\",\n                    cursor: \"pointer\",\n                    color: \"black\",\n                    marginRight: \"1rem\"\n                  }}\n                ></i>\n                <Link to={`/edit/${id}`}>\n                  <i\n                    className=\"fas fa-pencil-alt\"\n                    style={{\n                      float: \"right\",\n                      cursor: \"pointer\",\n                      color: \"black\",\n                      marginRight: \"1rem\"\n                    }}\n                  ></i>\n                </Link>\n              </h4>\n              {showContactInfo ? (\n                <ul className=\"list-group\">\n                  <li className=\"list-group-item\">Email: {email}</li>\n                  <li className=\"list-group-item\">Phone: {phone}</li>\n                  <li className=\"list-group-item\">\n                    <b>Message</b>: {message}\n                  </li>\n                </ul>\n              ) : null}\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nContact.propTypes = {\n  contact: PropTypes.object.isRequired\n};\n\nexport default Contact;\n","import React, { Component, Fragment } from \"react\";\nimport Contact from \"./Contact\";\nimport { Consumer } from \"../context\";\n\nexport class Contacts extends Component {\n  render() {\n    return (\n      <Consumer>\n        {value => (\n          <Fragment>\n            {value.contacts.map(contact => (\n              <Contact key={contact.id} contact={contact} />\n            ))}\n          </Fragment>\n        )}\n      </Consumer>\n    );\n  }\n}\n\nexport default Contacts;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\nconst Header = props => {\n  const { title } = props;\n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-3 py-0\">\n      <div className=\"container\">\n        <a href=\"/\" className=\"navbar-brand\">\n          {title}\n        </a>\n        <div>\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to=\"/\" className=\"nav-link\">\n                Home\n              </Link>\n            </li>\n            <li>\n              <Link to=\"/add\" className=\"nav-link\">\n                Add\n              </Link>\n            </li>\n\n            <li>\n              <Link to=\"/about\" className=\"nav-link\">\n                About\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nHeader.defaultProps = {\n  title: \"My APP\"\n};\n\nHeader.propTypes = {\n  title: PropTypes.string.isRequired\n};\n\nexport default Header;\n","import React, { Component } from \"react\";\nimport { db, Consumer } from \"../context\";\n\nexport class AddContact extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    message: \"\",\n    errors: {}\n  };\n\n  formOnChange = e => this.setState({ [e.target.name]: e.target.value });\n  formOnSubmit = async (dispatch, e) => {\n    e.preventDefault();\n\n    const { name, email, phone, message } = this.state;\n\n    const newContact = { name, email, phone, message };\n\n    await db.collection(\"contacts\").add(newContact).id;\n\n    this.setState({\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      message: \"\",\n      errors: {}\n    });\n\n    this.props.history.push(\"/\");\n  };\n\n  render() {\n    return (\n      <Consumer>\n        {value => (\n          <div className=\"card mb-3\">\n            <div className=\"card-header\">Add Contact</div>\n            <div className=\"card-body\">\n              <form\n                action=\"#\"\n                onChange={this.formOnChange}\n                onSubmit={this.formOnSubmit.bind(this, value.dispatch)}\n              >\n                <div className=\"form-group\">\n                  <label>Name</label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control form-control-md\"\n                    name=\"name\"\n                    placeholder=\"Enter your name...\"\n                    required\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label>Email</label>\n                  <input\n                    type=\"email\"\n                    className=\"form-control form-control-md\"\n                    name=\"email\"\n                    placeholder=\"Enter your email...\"\n                    required\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label>Phone</label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control form-control-md\"\n                    name=\"phone\"\n                    placeholder=\"Enter your phone...\"\n                    required\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label>Message</label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control form-control-md\"\n                    name=\"message\"\n                    placeholder=\"Enter your Message...\"\n                    required\n                  />\n                </div>\n                <input\n                  type=\"submit\"\n                  value=\"Add Contact\"\n                  className=\"btn btn-light btn-block\"\n                />\n              </form>\n            </div>\n          </div>\n        )}\n      </Consumer>\n    );\n  }\n}\n\nexport default AddContact;\n","import React, { Component } from \"react\";\nimport { db, Consumer } from \"../context\";\n\nexport class EditContact extends Component {\n  state = {\n    errors: {}\n  };\n\n  async componentDidMount() {\n    const { id } = this.props.match.params;\n    const doc = await db\n      .collection(\"contacts\")\n      .doc(id)\n      .get();\n\n    this.setState(doc.data());\n  }\n\n  formOnChange = e => this.setState({ [e.target.name]: e.target.value });\n  formOnSubmit = async (dispatch, e) => {\n    e.preventDefault();\n\n    const { id } = this.props.match.params;\n    const { name, email, phone, message } = this.state;\n    const editContact = { name, email, phone, message };\n\n    await db\n      .collection(\"contacts\")\n      .doc(id)\n      .set(editContact);\n\n    this.setState({\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      message: \"\",\n      errors: {}\n    });\n\n    this.props.history.push(\"/\");\n  };\n\n  render() {\n    const { name, email, phone, message } = this.state;\n    return (\n      <Consumer>\n        {value => (\n          <div className=\"card mb-3\">\n            <div className=\"card-header\">Edit Contact</div>\n            <div className=\"card-body\">\n              <form\n                action=\"#\"\n                onChange={this.formOnChange}\n                onSubmit={this.formOnSubmit.bind(this, value.dispatch)}\n              >\n                <div className=\"form-group\">\n                  <label>Name</label>\n                  <input\n                    type=\"text\"\n                    className={`form-control form-control-md`}\n                    name=\"name\"\n                    placeholder=\"Enter your name...\"\n                    defaultValue={name}\n                    required\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label>Email</label>\n                  <input\n                    type=\"email\"\n                    className=\"form-control form-control-md\"\n                    name=\"email\"\n                    placeholder=\"Enter your email...\"\n                    defaultValue={email}\n                    required\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label>Phone</label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control form-control-md\"\n                    name=\"phone\"\n                    placeholder=\"Enter your phone...\"\n                    defaultValue={phone}\n                    required\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label>Message</label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control form-control-md\"\n                    name=\"message\"\n                    placeholder=\"Enter your phone...\"\n                    defaultValue={message}\n                    required\n                  />\n                </div>\n                <input\n                  type=\"submit\"\n                  value=\"Update Contact\"\n                  className=\"btn btn-light btn-block\"\n                />\n              </form>\n            </div>\n          </div>\n        )}\n      </Consumer>\n    );\n  }\n}\n\nexport default EditContact;\n","import React from \"react\";\n\nexport default props => {\n  return (\n    <div>\n      <h1 className=\"display-4\">About Contact Manager</h1>\n      <p className=\"lead\">Simple app to manage contacts</p>\n      {props.match.params.id !== undefined && (\n        <p className=\"text-primary\">Your id is {props.match.params.id}</p>\n      )}\n      <p className=\"text-secondary\">Version 1.0</p>\n    </div>\n  );\n};\n","import React from \"react\";\n\nexport default function NotFound() {\n  return (\n    <div>\n      <h1 className=\"display-4\">404 Page Not Found</h1>\n      <p className=\"lead\">Sorry, that page does not exist</p>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Contacts from \"./components/Contacts\";\nimport Header from \"./components/Header\";\nimport AddContact from \"./components/AddContact\";\nimport EditContact from \"./components/EditContact\";\nimport About from \"./components/About\";\nimport NotFound from \"./components/NotFound\";\n\nimport { Provider } from \"./context\";\n\nimport \"@fortawesome/fontawesome-free/css/all.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <Provider>\n      <Router>\n        <div className=\"App\">\n          <Header title=\"Contact Manager\" />\n          <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/\" component={Contacts} />\n              <Route exact path=\"/about\" component={About} />\n              <Route exact path=\"/about/:id\" component={About} />\n              <Route exact path=\"/add\" component={AddContact} />\n              <Route exact path=\"/edit/:id\" component={EditContact} />\n              <Route component={NotFound} />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}