{"version":3,"sources":["firestore.js","context.js","components/Contact.js","components/Contacts.js","components/Header.js","components/AddContact.js","components/EditContact.js","components/About.js","components/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["firebase","require","apps","length","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","Context","React","createContext","Consumer","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","collection","get","snapshot","data","docs","doc","this","value","props","children","Component","Contact","showContactInfo","contactListener","e","classList","target","contains","deleteContact","a","async","delete","name","email","phone","bind","className","onClick","style","cursor","float","color","marginRight","to","Contacts","key","Header","title","href","defaultProps","AddContact","errors","formOnChange","formOnSubmit","preventDefault","newContact","add","history","push","onChange","onSubmit","placeholder","required","EditContact","match","params","editContact","set","defaultValue","undefined","NotFound","App","exact","path","component","About","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"gUAAMA,EAAWC,EAAQ,IACzBA,EAAQ,IAEHD,EAASE,KAAKC,QACjBH,EAASI,cAAc,CACrBC,OAAQ,0CACRC,WAAY,gCACZC,YAAa,uCACbC,UAAW,gBACXC,cAAe,4BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAInB,IAEeC,EAFJb,EAASc,YCbdC,EAAUC,IAAMC,gBAChBC,EAAWH,EAAQG,SAEnBC,EAAU,SAACC,EAAOC,GACtB,OAAQA,EAAOC,MACb,IAAK,iBACH,OAAO,eACFF,EADL,CAEEG,SAAUH,EAAMG,SAASC,QACvB,SAAAC,GAAO,OAAIA,EAAQC,KAAOL,EAAOM,aAIvC,IAAK,cACH,OAAO,eACFP,EADL,CAEEG,SAAS,CAAEF,EAAOM,SAAV,mBAAsBP,EAAMG,aAGxC,IAAK,eACH,OAAO,eACFH,EADL,CAEEG,SAAUH,EAAMG,SAASK,KAAI,SAAAH,GAAO,OAClCA,EAAQC,KAAOL,EAAOM,QAAQD,GACzBD,EAAUJ,EAAOM,QAClBF,OAIV,QACE,OAAOL,IAIAS,EAAb,2MACET,MAAQ,CACNG,SAAU,GACVO,SAAU,SAAAT,GAAM,OAAI,EAAKU,UAAS,SAAAX,GAAK,OAAID,EAAQC,EAAOC,QAH9D,uLAO2BR,EAAGmB,WAAW,YAAYC,OAPrD,OAOUC,EAPV,OAQUC,EAAOD,EAASE,KAAKR,KAAI,SAAAS,GAAG,oBAAOX,GAAIW,EAAIX,IAAOW,EAAIF,WAE5DG,KAAKP,SAAS,CAAER,SAAUY,IAV9B,gFAcI,OACE,kBAACpB,EAAQc,SAAT,CAAkBU,MAAOD,KAAKlB,OAC3BkB,KAAKE,MAAMC,cAhBpB,GAA8BC,aCuDfC,E,2MAtFbvB,MAAQ,CACNwB,iBAAiB,G,EAGnBC,gBAAkB,SAAAC,GAChB,IAAMC,EAAYD,EAAEE,OAAOD,UAEvBA,EAAUE,SAAS,gBACrB,EAAKlB,SAAS,CAAEa,iBAAkB,EAAKxB,MAAMwB,kBAGtCG,EAAUE,SAAS,aAC1B,EAAKC,iB,EAMTA,cAAgB,SAAOxB,EAAII,GAAX,SAAAqB,EAAAC,OAAA,kEAAAD,EAAA,MACRtC,EACHmB,WAAW,YACXK,IAAIX,GACJ2B,UAJW,OAMdvB,EAAS,CAAER,KAAM,iBAAkBK,QAASD,IAN9B,sC,wEASN,IAAD,SAC4BY,KAAKE,MAAMf,QAAtCC,EADD,EACCA,GAAI4B,EADL,EACKA,KAAMC,EADX,EACWA,MAAOC,EADlB,EACkBA,MACjBZ,EAAoBN,KAAKlB,MAAzBwB,gBAER,OACE,kBAAC1B,EAAD,MACG,SAAAqB,GAMC,OALA,EAAKW,cAAgB,EAAKA,cAAcO,KACtC,EACA/B,EACAa,EAAMT,UAGN,yBAAK4B,UAAU,sBAAsBC,QAAS,EAAKd,iBACjD,4BACGS,EAAM,IACP,uBACEI,UAAU,mBACVE,MAAO,CAAEC,OAAQ,aAEnB,uBACEH,UAAU,eACVE,MAAO,CACLE,MAAO,QACPD,OAAQ,UACRE,MAAO,QACPC,YAAa,UAGjB,kBAAC,IAAD,CAAMC,GAAE,gBAAWvC,IACjB,uBACEgC,UAAU,oBACVE,MAAO,CACLE,MAAO,QACPD,OAAQ,UACRE,MAAO,QACPC,YAAa,YAKpBpB,EACC,wBAAIc,UAAU,cACZ,wBAAIA,UAAU,mBAAd,UAAwCH,GACxC,wBAAIG,UAAU,mBAAd,UAAwCF,IAExC,a,GA1EId,aCePwB,EAhBf,iLAEI,OACE,kBAAChD,EAAD,MACG,SAAAqB,GAAK,OACJ,kBAAC,WAAD,KACGA,EAAMhB,SAASK,KAAI,SAAAH,GAAO,OACzB,kBAAC,EAAD,CAAS0C,IAAK1C,EAAQC,GAAID,QAASA,eAPjD,GAA8BiB,aCAxB0B,EAAS,SAAA5B,GAAU,IACf6B,EAAU7B,EAAV6B,MACR,OACE,yBAAKX,UAAU,4DACb,yBAAKA,UAAU,aACb,uBAAGY,KAAK,IAAIZ,UAAU,gBACnBW,GAEH,6BACE,wBAAIX,UAAU,sBACZ,wBAAIA,UAAU,YACZ,kBAAC,IAAD,CAAMO,GAAG,IAAIP,UAAU,YAAvB,SAIF,4BACE,kBAAC,IAAD,CAAMO,GAAG,OAAOP,UAAU,YAA1B,QAKF,4BACE,kBAAC,IAAD,CAAMO,GAAG,SAASP,UAAU,YAA5B,eAWdU,EAAOG,aAAe,CACpBF,MAAO,UAOMD,Q,QC6CAI,EAvFf,2MACEpD,MAAQ,CACNkC,KAAM,GACNC,MAAO,GACPC,MAAO,GACPiB,OAAQ,IALZ,EAQEC,aAAe,SAAA5B,GAAC,OAAI,EAAKf,SAAL,eAAiBe,EAAEE,OAAOM,KAAOR,EAAEE,OAAOT,SARhE,EASEoC,aAAe,SAAO7C,EAAUgB,GAAjB,yBAAAK,EAAAC,OAAA,uDACbN,EAAE8B,iBADW,EAGkB,EAAKxD,MAA5BkC,EAHK,EAGLA,KAAMC,EAHD,EAGCA,MAAOC,EAHR,EAGQA,MAEfqB,EAAa,CAAEvB,OAAMC,QAAOC,SALrB,WAAAL,EAAA,MAOItC,EAAGmB,WAAW,YAAY8C,IAAID,GAAYnD,IAP9C,OAOPA,EAPO,OASbI,EAAS,CAAER,KAAM,cAAeK,QAAQ,aAAGD,MAAOmD,KAElD,EAAK9C,SAAS,CACZuB,KAAM,GACNC,MAAO,GACPC,MAAO,GACPiB,OAAQ,KAGV,EAAKjC,MAAMuC,QAAQC,KAAK,KAlBX,sCATjB,wEA8BY,IAAD,OACP,OACE,kBAAC9D,EAAD,MACG,SAAAqB,GAAK,OACJ,yBAAKmB,UAAU,aACb,yBAAKA,UAAU,eAAf,eACA,yBAAKA,UAAU,aACb,0BACErC,OAAO,IACP4D,SAAU,EAAKP,aACfQ,SAAU,EAAKP,aAAalB,KAAK,EAAMlB,EAAMT,WAE7C,yBAAK4B,UAAU,cACb,uCACA,2BACEpC,KAAK,OACLoC,UAAU,+BACVJ,KAAK,OACL6B,YAAY,qBACZC,UAAQ,KAIZ,yBAAK1B,UAAU,cACb,wCACA,2BACEpC,KAAK,QACLoC,UAAU,+BACVJ,KAAK,QACL6B,YAAY,sBACZC,UAAQ,KAGZ,yBAAK1B,UAAU,cACb,wCACA,2BACEpC,KAAK,OACLoC,UAAU,+BACVJ,KAAK,QACL6B,YAAY,sBACZC,UAAQ,KAGZ,2BACE9D,KAAK,SACLiB,MAAM,cACNmB,UAAU,sCA5E5B,GAAgChB,aCqGjB2C,EArGf,2MACEjE,MAAQ,CACNqD,OAAQ,IAFZ,EAeEC,aAAe,SAAA5B,GAAC,OAAI,EAAKf,SAAL,eAAiBe,EAAEE,OAAOM,KAAOR,EAAEE,OAAOT,SAfhE,EAgBEoC,aAAe,SAAO7C,EAAUgB,GAAjB,yBAAAK,EAAAC,OAAA,uDACbN,EAAE8B,iBAEMlD,EAAO,EAAKc,MAAM8C,MAAMC,OAAxB7D,GAHK,EAIkB,EAAKN,MAA5BkC,EAJK,EAILA,KAAMC,EAJD,EAICA,MAAOC,EAJR,EAIQA,MACfgC,EAAc,CAAElC,OAAMC,QAAOC,SALtB,WAAAL,EAAA,MAOPtC,EACHmB,WAAW,YACXK,IAAIX,GACJ+D,IAAID,IAVM,OAYb1D,EAAS,CAAER,KAAM,eAAgBK,QAAQ,aAAGD,MAAO8D,KAEnD,EAAKzD,SAAS,CACZuB,KAAM,GACNC,MAAO,GACPC,MAAO,GACPiB,OAAQ,KAGV,EAAKjC,MAAMuC,QAAQC,KAAK,KArBX,sCAhBjB,oKAMYtD,EAAOY,KAAKE,MAAM8C,MAAMC,OAAxB7D,GANZ,mBAOsBb,EACfmB,WAAW,YACXK,IAAIX,GACJO,OAVP,OAOUI,EAPV,OAYIC,KAAKP,SAASM,EAAIF,QAZtB,gFAwCY,IAAD,SACwBG,KAAKlB,MAA5BkC,EADD,EACCA,KAAMC,EADP,EACOA,MAAOC,EADd,EACcA,MACrB,OACE,kBAACtC,EAAD,MACG,SAAAqB,GAAK,OACJ,yBAAKmB,UAAU,aACb,yBAAKA,UAAU,eAAf,gBACA,yBAAKA,UAAU,aACb,0BACErC,OAAO,IACP4D,SAAU,EAAKP,aACfQ,SAAU,EAAKP,aAAalB,KAAK,EAAMlB,EAAMT,WAE7C,yBAAK4B,UAAU,cACb,uCACA,2BACEpC,KAAK,OACLoC,UAAS,+BACTJ,KAAK,OACL6B,YAAY,qBACZO,aAAcpC,EACd8B,UAAQ,KAIZ,yBAAK1B,UAAU,cACb,wCACA,2BACEpC,KAAK,QACLoC,UAAU,+BACVJ,KAAK,QACL6B,YAAY,sBACZO,aAAcnC,EACd6B,UAAQ,KAGZ,yBAAK1B,UAAU,cACb,wCACA,2BACEpC,KAAK,OACLoC,UAAU,+BACVJ,KAAK,QACL6B,YAAY,sBACZO,aAAclC,EACd4B,UAAQ,KAGZ,2BACE9D,KAAK,SACLiB,MAAM,iBACNmB,UAAU,sCA1F5B,GAAiChB,aCDlB,WAAAF,GACb,OACE,6BACE,wBAAIkB,UAAU,aAAd,yBACA,uBAAGA,UAAU,QAAb,sCAC2BiC,IAA1BnD,EAAM8C,MAAMC,OAAO7D,IAClB,uBAAGgC,UAAU,gBAAb,cAAwClB,EAAM8C,MAAMC,OAAO7D,IAE7D,uBAAGgC,UAAU,kBAAb,iBCRS,SAASkC,IACtB,OACE,6BACE,wBAAIlC,UAAU,aAAd,sBACA,uBAAGA,UAAU,QAAb,oC,kBC+BSmC,MAtBf,WACE,OACE,kBAAC,EAAD,KACE,kBAAC,IAAD,KACE,yBAAKnC,UAAU,OACb,kBAAC,EAAD,CAAQW,MAAM,oBACd,yBAAKX,UAAU,aACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOoC,OAAK,EAACC,KAAK,IAAIC,UAAW9B,IACjC,kBAAC,IAAD,CAAO4B,OAAK,EAACC,KAAK,SAASC,UAAWC,IACtC,kBAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,aAAaC,UAAWC,IAC1C,kBAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,OAAOC,UAAWxB,IACpC,kBAAC,IAAD,CAAOsB,OAAK,EAACC,KAAK,YAAYC,UAAWX,IACzC,kBAAC,IAAD,CAAOW,UAAWJ,UChBZM,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASf,MACvB,2DCZNgB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.b3b97289.chunk.js","sourcesContent":["const firebase = require(\"firebase\");\r\nrequire(\"firebase/firestore\");\r\n\r\nif (!firebase.apps.length) {\r\n  firebase.initializeApp({\r\n    apiKey: \"AIzaSyBtXP7szv3Yri7Z6SOApsjFF96isZJYEfI\",\r\n    authDomain: \"chatapp-aac3f.firebaseapp.com\",\r\n    databaseURL: \"https://chatapp-aac3f.firebaseio.com\",\r\n    projectId: \"chatapp-aac3f\",\r\n    storageBucket: \"chatapp-aac3f.appspot.com\",\r\n    messagingSenderId: \"801272197681\",\r\n    appId: \"1:801272197681:web:cb4c9f6813abe42df25b10\",\r\n    measurementId: \"G-M6YTT80Z80\"\r\n  });\r\n}\r\n\r\nconst db = firebase.firestore();\r\n\r\nexport default db;\r\n","import React, { Component } from \"react\";\r\nimport db from \"./firestore\";\r\n\r\nconst Context = React.createContext();\r\nconst Consumer = Context.Consumer;\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"DELETE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          contact => contact.id !== action.payload\r\n        )\r\n      };\r\n\r\n    case \"ADD_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts]\r\n      };\r\n\r\n    case \"EDIT_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map(contact =>\r\n          contact.id === action.payload.id\r\n            ? (contact = action.payload)\r\n            : contact\r\n        )\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport class Provider extends Component {\r\n  state = {\r\n    contacts: [],\r\n    dispatch: action => this.setState(state => reducer(state, action))\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const snapshot = await db.collection(\"contacts\").get();\r\n    const data = snapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n\r\n    this.setState({ contacts: data });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport { db, Consumer };\r\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { db, Consumer } from \"../context\";\n\nclass Contact extends Component {\n  state = {\n    showContactInfo: false\n  };\n\n  contactListener = e => {\n    const classList = e.target.classList;\n    // Drop down\n    if (classList.contains(\"fa-sort-down\")) {\n      this.setState({ showContactInfo: !this.state.showContactInfo });\n    }\n    // Delete\n    else if (classList.contains(\"fa-trash\")) {\n      this.deleteContact();\n    }\n\n    // Update\n  };\n\n  deleteContact = async (id, dispatch) => {\n    await db\n      .collection(\"contacts\")\n      .doc(id)\n      .delete();\n\n    dispatch({ type: \"DELETE_CONTACT\", payload: id });\n  };\n\n  render() {\n    const { id, name, email, phone } = this.props.contact;\n    const { showContactInfo } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          this.deleteContact = this.deleteContact.bind(\n            this,\n            id,\n            value.dispatch\n          );\n          return (\n            <div className=\"card card-body mb-3\" onClick={this.contactListener}>\n              <h4>\n                {name}{\" \"}\n                <i\n                  className=\"fas fa-sort-down\"\n                  style={{ cursor: \"pointer\" }}\n                ></i>\n                <i\n                  className=\"fas fa-trash\"\n                  style={{\n                    float: \"right\",\n                    cursor: \"pointer\",\n                    color: \"black\",\n                    marginRight: \"1rem\"\n                  }}\n                ></i>\n                <Link to={`/edit/${id}`}>\n                  <i\n                    className=\"fas fa-pencil-alt\"\n                    style={{\n                      float: \"right\",\n                      cursor: \"pointer\",\n                      color: \"black\",\n                      marginRight: \"1rem\"\n                    }}\n                  ></i>\n                </Link>\n              </h4>\n              {showContactInfo ? (\n                <ul className=\"list-group\">\n                  <li className=\"list-group-item\">Email: {email}</li>\n                  <li className=\"list-group-item\">Phone: {phone}</li>\n                </ul>\n              ) : null}\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nContact.propTypes = {\n  contact: PropTypes.object.isRequired\n};\n\nexport default Contact;\n","import React, { Component, Fragment } from \"react\";\r\nimport Contact from \"./Contact\";\r\nimport { Consumer } from \"../context\";\r\n\r\nexport class Contacts extends Component {\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {value => (\r\n          <Fragment>\r\n            {value.contacts.map(contact => (\r\n              <Contact key={contact.id} contact={contact} />\r\n            ))}\r\n          </Fragment>\r\n        )}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contacts;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Header = props => {\r\n  const { title } = props;\r\n  return (\r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-3 py-0\">\r\n      <div className=\"container\">\r\n        <a href=\"/\" className=\"navbar-brand\">\r\n          {title}\r\n        </a>\r\n        <div>\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/\" className=\"nav-link\">\r\n                Home\r\n              </Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/add\" className=\"nav-link\">\r\n                Add\r\n              </Link>\r\n            </li>\r\n\r\n            <li>\r\n              <Link to=\"/about\" className=\"nav-link\">\r\n                About\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nHeader.defaultProps = {\r\n  title: \"My APP\"\r\n};\r\n\r\nHeader.propTypes = {\r\n  title: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\nimport { db, Consumer } from \"../context\";\n\nexport class AddContact extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    errors: {}\n  };\n\n  formOnChange = e => this.setState({ [e.target.name]: e.target.value });\n  formOnSubmit = async (dispatch, e) => {\n    e.preventDefault();\n\n    const { name, email, phone } = this.state;\n\n    const newContact = { name, email, phone };\n\n    const id = await db.collection(\"contacts\").add(newContact).id;\n\n    dispatch({ type: \"ADD_CONTACT\", payload: { id, ...newContact } });\n\n    this.setState({\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      errors: {}\n    });\n\n    this.props.history.push(\"/\");\n  };\n\n  render() {\n    return (\n      <Consumer>\n        {value => (\n          <div className=\"card mb-3\">\n            <div className=\"card-header\">Add Contact</div>\n            <div className=\"card-body\">\n              <form\n                action=\"#\"\n                onChange={this.formOnChange}\n                onSubmit={this.formOnSubmit.bind(this, value.dispatch)}\n              >\n                <div className=\"form-group\">\n                  <label>Name</label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control form-control-md\"\n                    name=\"name\"\n                    placeholder=\"Enter your name...\"\n                    required\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label>Email</label>\n                  <input\n                    type=\"email\"\n                    className=\"form-control form-control-md\"\n                    name=\"email\"\n                    placeholder=\"Enter your email...\"\n                    required\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label>Phone</label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control form-control-md\"\n                    name=\"phone\"\n                    placeholder=\"Enter your phone...\"\n                    required\n                  />\n                </div>\n                <input\n                  type=\"submit\"\n                  value=\"Add Contact\"\n                  className=\"btn btn-light btn-block\"\n                />\n              </form>\n            </div>\n          </div>\n        )}\n      </Consumer>\n    );\n  }\n}\n\nexport default AddContact;\n","import React, { Component } from \"react\";\nimport { db, Consumer } from \"../context\";\n\nexport class EditContact extends Component {\n  state = {\n    errors: {}\n  };\n\n  async componentDidMount() {\n    const { id } = this.props.match.params;\n    const doc = await db\n      .collection(\"contacts\")\n      .doc(id)\n      .get();\n\n    this.setState(doc.data());\n  }\n\n  formOnChange = e => this.setState({ [e.target.name]: e.target.value });\n  formOnSubmit = async (dispatch, e) => {\n    e.preventDefault();\n\n    const { id } = this.props.match.params;\n    const { name, email, phone } = this.state;\n    const editContact = { name, email, phone };\n\n    await db\n      .collection(\"contacts\")\n      .doc(id)\n      .set(editContact);\n\n    dispatch({ type: \"EDIT_CONTACT\", payload: { id, ...editContact } });\n\n    this.setState({\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      errors: {}\n    });\n\n    this.props.history.push(\"/\");\n  };\n\n  render() {\n    const { name, email, phone } = this.state;\n    return (\n      <Consumer>\n        {value => (\n          <div className=\"card mb-3\">\n            <div className=\"card-header\">Edit Contact</div>\n            <div className=\"card-body\">\n              <form\n                action=\"#\"\n                onChange={this.formOnChange}\n                onSubmit={this.formOnSubmit.bind(this, value.dispatch)}\n              >\n                <div className=\"form-group\">\n                  <label>Name</label>\n                  <input\n                    type=\"text\"\n                    className={`form-control form-control-md`}\n                    name=\"name\"\n                    placeholder=\"Enter your name...\"\n                    defaultValue={name}\n                    required\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label>Email</label>\n                  <input\n                    type=\"email\"\n                    className=\"form-control form-control-md\"\n                    name=\"email\"\n                    placeholder=\"Enter your email...\"\n                    defaultValue={email}\n                    required\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label>Phone</label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control form-control-md\"\n                    name=\"phone\"\n                    placeholder=\"Enter your phone...\"\n                    defaultValue={phone}\n                    required\n                  />\n                </div>\n                <input\n                  type=\"submit\"\n                  value=\"Update Contact\"\n                  className=\"btn btn-light btn-block\"\n                />\n              </form>\n            </div>\n          </div>\n        )}\n      </Consumer>\n    );\n  }\n}\n\nexport default EditContact;\n","import React from \"react\";\r\n\r\nexport default props => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">About Contact Manager</h1>\r\n      <p className=\"lead\">Simple app to manage contacts</p>\r\n      {props.match.params.id !== undefined && (\r\n        <p className=\"text-primary\">Your id is {props.match.params.id}</p>\r\n      )}\r\n      <p className=\"text-secondary\">Version 1.0</p>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport default function NotFound() {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">404 Page Not Found</h1>\r\n      <p className=\"lead\">Sorry, that page does not exist</p>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Contacts from \"./components/Contacts\";\nimport Header from \"./components/Header\";\nimport AddContact from \"./components/AddContact\";\nimport EditContact from \"./components/EditContact\";\nimport About from \"./components/About\";\nimport NotFound from \"./components/NotFound\";\n\nimport { Provider } from \"./context\";\n\nimport \"@fortawesome/fontawesome-free/css/all.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <Provider>\n      <Router>\n        <div className=\"App\">\n          <Header title=\"Contact Manager\" />\n          <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/\" component={Contacts} />\n              <Route exact path=\"/about\" component={About} />\n              <Route exact path=\"/about/:id\" component={About} />\n              <Route exact path=\"/add\" component={AddContact} />\n              <Route exact path=\"/edit/:id\" component={EditContact} />\n              <Route component={NotFound} />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}